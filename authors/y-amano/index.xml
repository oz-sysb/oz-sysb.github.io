<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>y-amano on OZVISION Tech Blog</title><link>http://techblog.oz-vision.co.jp/authors/y-amano/</link><description>Recent content in y-amano on OZVISION Tech Blog</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>© OZVISION Inc.</copyright><lastBuildDate>Tue, 19 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="http://techblog.oz-vision.co.jp/authors/y-amano/index.xml" rel="self" type="application/rss+xml"/><item><title>timesチャンネルを活用したコミュニケーション</title><link>http://techblog.oz-vision.co.jp/blog/times-ch-slack/</link><pubDate>Tue, 19 Sep 2023 00:00:00 +0000</pubDate><guid>http://techblog.oz-vision.co.jp/blog/times-ch-slack/</guid><description>こんにちは！
オズビジョン開発ユニット（ハピタス）の天野です。
この記事では、Slack内での「timesチャンネルを活用したコミュニケーション」について紹介します。
timesチャンネルとは何か timesチャンネルは、いわゆる「分報」を共有する場所です。オズビジョンのエンジニアたちは、プロジェクト進行中に気づいたこと、学んだこと、また業務には関係しないが共有したいことなど、自由に情報を発信できます。
開発ユニット（ハピタス）のほぼ半数のエンジニアが自分専用のチャンネルを所有しており、それぞれのチャンネル名は「times-」から始まることで、そのチャンネルがtimesチャンネルであることが明確に示されています。
timesチャンネルの活用例 以下に、実際にtimesチャンネルで活用されている例を紹介します。
簡単な進捗共有 疑問をつぶやく 休憩のお知らせ 特に休憩連絡をするルールはありませんが、個人の気分で「きゅうけいっ」スタンプをtimesチャンネルに投稿することがあります。
トッポ食べたい ランチのメンバーを募集 急遽募集した結果、4人集まりました笑
使ってみたら便利だったツールを共有 timesチャンネルを導入して感じたメリット 質問のハードルが下がった 業務中に疑問が生じた場合、timesチャンネルで簡単に質問できるため、知識豊富なメンバーから迅速な回答を受けることができます。特に、新入社員や特定のドメインに精通していないメンバーにとって、timesチャンネルは知識の補完として非常に役立っています。
知識の共有が促進される 業務中に得た新しい知識や情報をtimesチャンネルにメモすることで、他のメンバーもそれを共有できます。また、このメモはSlackの検索機能で見つけやすいため、将来的に同じ問題にぶつかったときに役立つことがあります。
業務以外の話題で盛り上がれる timesチャンネルの使い方は個人の自由であり、メンバーは休日の旅行写真やランチの内容など、業務以外のトピックについても自由に投稿します。こうした楽しい話題を通じて、チームメンバー同士の関係性が深まったり、「人となり」を知れたりします。
業務以外の話題を共有できるtimesチャンネルは、コミュニケーションの促進と楽しい雰囲気作りにもつながっています。
感想 2023年9月現在、弊社では週に2日の出社が原則となっています。このため、リモートワーク中のメンバーとのコミュニケーションも重要です。timesチャンネルは、テキストベースのコミュニケーションを円滑にし、リモート環境でのコミュニケーションに役立っています。
最後までお読みいただき、ありがとうございました。</description></item><item><title>金曜日はビアバッシュで乾杯して帰ろう🍻</title><link>http://techblog.oz-vision.co.jp/blog/beerbash/</link><pubDate>Fri, 08 Sep 2023 00:00:00 +0000</pubDate><guid>http://techblog.oz-vision.co.jp/blog/beerbash/</guid><description>こんにちは！オズビジョン開発ユニット（ハピタス）の天野です。
今回は、開発ユニットの週末イベント「ビアバッシュ」について紹介します。
ビアバッシュの概要 毎週金曜日、終業前の30分を利用して、特別なイベント「ビアバッシュ」を開催しています。このイベントは、その週に感謝したい人々への「ありがとう」を送り、お互いを讃え合うことを目的としています。弊社は火曜日と金曜日に出社日を設けているため、金曜日にはオフィスにいるメンバーがリアルでお酒を楽しむこともあります。
（トップの画像はオンライン開催時にみんなで乾杯した時の写真です。）
ビアバッシュ中にメンバーは専用のSlackチャンネル「thanksありがとう」を通じて感謝のメッセージを共有しています。
感謝のメッセージ例 専用のSlackチャンネルで実際に送られるメッセージを紹介します。
このように、メッセージを送ると大量のスタンプが付くことがあります笑
僕もいつも大量にスタンプを送りつけています。
仕事終わりでみんなテンションが高いです。
ビアバッシュを通じて得られたもの ①日頃の感謝を改めて言葉にできる 通常の業務の中で、お世話になっているメンバーは多いことでしょう。しかし、直接感謝の気持ちを伝えるのは、時には照れくさいことや適切なタイミングを見計らう難しさがあります。そこで、「感謝を伝える場」を設けることで、日頃の感謝の気持ちを改めて言葉にする機会が得られます。
②他部署メンバーとのコミュニケーションの場にもなる ビアバッシュはもともとエンジニア内で始まりましたが、プロジェクトで関わった他部署メンバーへのメッセージが増えていきました。徐々にエンジニア以外のメンバーも参加するようになり、ちょっとした交流の場になっています。
③感謝されることの喜び やはり、誰かに感謝されるととても嬉しいです。他のメンバーからの感謝の言葉は、自身の仕事への取り組みと貢献が認められていることを示しています。また、何気ない自分の行動が誰かにとっては大きな助けになっていることに気づくことができます。この結果、モチベーションの向上につながり、メンバー全体の働きやすさを高めています。
終わりに 弊社オズビジョンのビアバッシュは、感謝と交流を重視した特別なイベントです。週の疲れを癒し、新たなエネルギーをチームに注入する場として、価値を提供しています。あなたのチームでも、ビアバッシュを通じて感謝の輪を広げ、一体感を育んでみてはいかがでしょうか。
最後まで読んでいただきありがとうございました。</description></item><item><title>レビュー指摘をチーム全体に浸透させる取り組み</title><link>http://techblog.oz-vision.co.jp/blog/make-the-review-points-permeate/</link><pubDate>Mon, 24 Jul 2023 00:00:00 +0000</pubDate><guid>http://techblog.oz-vision.co.jp/blog/make-the-review-points-permeate/</guid><description>こんにちは！オズビジョン開発ユニット(ハピタス)の天野です。
この記事では、私たちが実践している「チーム全体でレビュー指摘（フィードバック）を共有する取り組み」について紹介します。
要約 プロジェクトごとに別チームで開発する開発ユニット(ハピタス)は、有益な知識とフィードバックを共有する必要性を感じ、週1回のミーティングでレビュー指摘をまとめたリストを振り返る時間を作りました。具体的な指摘を共有し、100件の知識抽出と改善を実現。レビュアーとレビュイーからの声も好評。これからも価値ある情報を共有する「お焚き上げ」プロセスを通じて、チームの改善を進めていく予定です。
背景 開発ユニット(ハピタス)は、プロジェクトごとに別々のチームで開発しています。これまではコードレビューが品質保証の一環として行われてきましたが、有益な知識やフィードバックが他のチームメンバーと共有されるべきだという考えから、過去のレビュー指摘を振り返り、他チームへのフィードバックも垣根を越えて横展開するための場を設けました。
取り組み内容 週に1度、全体ミーティングで、レビュー指摘のフィードバックがまとめられたスプレッドシートを共有しています。
このスプレッドシートは日々更新され、必要に応じて新しいフィードバックが追加されます。
ミーティングでは、以下の情報を確認します。
差し戻し理由 改善または継続の状態 差し戻しの詳細内容 差し戻し理由の詳細 提案事項 具体的な指摘のURL 確認日 この場で、指摘したメンバーからの解説と他メンバーからの質問が行われます。解説の中で具体的な指摘の例を示し、チームの理解度・浸透度が低い指摘については引き続き振り返るようにしています。通常、1回のミーティングで4~6件の指摘を取り上げます。
さらに、チェックリストが増え続けるため、定期的に内容を整理し、組織内で共有済みと認識されるフィードバックや学びを「お焚き上げ」としてマークし、今後確認する必要がないものとして取り扱っています。
実績 この取り組みを半年間続けた結果、約100件の知識抽出と横展開が実現しました。
レビュアーからの声 「指摘を受けた人以外も意識してコードを書く場面が増えてきた」 「以前の指摘をレビュアーも振り返れるようになった」 「同じ指摘が減ってきた」 レビュイーからの声 「XSSエスケープへの意識が高まり、セキュリティ指摘が減少」 「新メンバーも以前の知見を追えるようになった」 感想 知識を蓄積する行為は容易ですが、それをチーム全体に共有することに大きな重要性があると考えます。特に、組織全体で共有される価値があると認識された情報を整理する「お焚き上げ」のプロセスは、大きな価値を持つ行動と言えるでしょう。</description></item><item><title>ハピタス開発チームの品質向上に向けたアプローチ</title><link>http://techblog.oz-vision.co.jp/blog/specification-reviews-in-ozvision/</link><pubDate>Mon, 17 Jul 2023 00:00:00 +0000</pubDate><guid>http://techblog.oz-vision.co.jp/blog/specification-reviews-in-ozvision/</guid><description>こんにちは！オズビジョン開発ユニットの天野です。
今回は、ハピタス開発チームが行っている品質改善の取り組みをご紹介します。
要約 弊社のサービス ハピタス は、常に新しい機能をリリースしています。
これらの新機能は、既存の仕様に影響を与える場合もあります。
そのため、私たちは設計段階で「案件説明会」という名のMTGを開催し、ハピタス開発チーム全体でレビューを徹底して行っています。
このアプローチにより、サービスの品質を向上させると同時に、不十分な設計や考慮漏れによる事故を未然に防ぐことを目指しています。
また、自分の担当範囲外の機能開発についてもキャッチアップすることで、より広い視野での成長を目指しています。
なぜ始めたのか 以前は、その機能の開発を担当するメンバーが独自で設計を行っていましたが、他で並行して進めている開発と修正が重複したり、既存仕様に意図しない影響を及ぼしてしまうことがありました。そこで、設計段階で詳しいメンバーによるレビューと進行中の他の機能開発との影響確認のためのMTGを開始しました。
最初は詳しいメンバーと担当者のみの参加でしたが、より広範囲での情報共有を図るために現在はハピタス開発チーム全員の参加を基本としています。
具体的な取り組み 会議体 週に1度、ハピタス開発チーム全員が参加するMTGを設定しています。
新機能の要件が一定程度決まり、開発側が要件定義を進めるタイミングで案件説明会を行います。
進め方 要件定義のフォーマットに従い、担当者が事前に作成した要件定義書をもとに画面共有しながら全体に共有していきます。
機能によってはスプレッドシートやFigmaを使って共有することもあります。
要件定義フォーマットの一部
# 案件概要 - 開発する機能の説明 - 目的 - 企画の主担当 - 画面イメージ # 仕様定義 ## 機能要件 - 開発スコープ - 改修箇所 - データベースへの影響があるか - バッチ処理が必要か - 管理画面の開発を行うか ## 非機能要件 - マイルストーン - データ集計・効果測定の仕組み - 監視 - 性能 - セキュリティ 共有が終わった後は、メンバーからのフィードバックや質問の時間を設けています。フィードバックでは、仕様に関するものやセキュリティ対策、テーブル設計など様々な観点からアドバイスをいただきます。</description></item><item><title>GitHub CopilotとAmazon CodeWhispererを比較してみた😎</title><link>http://techblog.oz-vision.co.jp/blog/githubcopilot-vs-amazoncodewhisperer/</link><pubDate>Sat, 01 Jul 2023 00:00:00 +0000</pubDate><guid>http://techblog.oz-vision.co.jp/blog/githubcopilot-vs-amazoncodewhisperer/</guid><description>こんにちは！オズビジョン開発ユニットの天野です。
昨今話題になっているAIによるコーディング支援ツール「GitHub Copilot」と「Amazon CodeWhisperer」について、実際に動かしながら比較を行い、実務においても利用価値があるのか調査していきます。
概要 GitHub Copilotとは？ GitHub Copilotは、OpenAIが開発した人工知能モデル「OpenAI Codex」を使用し、コードや機能をサジェストしてくれる &amp;ldquo;あなたのAIペアプログラマー&amp;rdquo; です。(2022年6月21日一般リリース)
Your AI pair programmer GitHub Copilot uses the OpenAI Codex to suggest code and entire functions in real-time, right from your editor.</description></item><item><title>新卒1年目の自分が社外イベント登壇という大仕事を任され、学んだこと！</title><link>http://techblog.oz-vision.co.jp/blog/jipc-introduction/</link><pubDate>Wed, 22 Mar 2023 00:00:00 +0000</pubDate><guid>http://techblog.oz-vision.co.jp/blog/jipc-introduction/</guid><description>自己紹介 初めまして。開発ユニット(ハピタス)の天野です。
2022年4月に新卒でエンジニアとして入社し、ハピタスの開発を担当しています。
静岡出身・在住で普段はリモートワークをしています。
趣味はお笑い・モルック・カラオケ・麻雀・スノボ。
要約 会社のキーマンに担当プロジェクトでの取り組みを評価していただき、新人の自分が社外イベントに登壇しました。
この経験を通じて得た学びを共有させていただきます。
当日の模様 各社の若手の精鋭が集う中、1年目は自分だけだったので、抜擢されて嬉しかったです。
続いて静岡県からリモートで勤務を続ける、オズビジョンのエンジニア天野さんより”新人でも展開可能な新しいチャレンジ”を紹介していただきました。”効果と向き合い続ける”をテーマに改善を進めていき、経験値が浅い新人スタッフがグロースさせることができた繰り返し購入可能なアフィリエイト（ハピタス様ではリカーリング案件と呼称）での事例の紹介でした。
繰り返し可能なアフィリエイト案件=リカーリング案件に注力してグロースさせる際、あくまでもデータを元に仮説・実行と効果検証を繰り返しグロースさせた手腕はデジタリオ（ECナビ運営）の高坂さんから”事業コミットの姿勢がここまであるエンジニアは素晴らしい”と絶賛されました。
登壇イベントJIPC_当日の記事
発表スライド：経験の浅い新人でもできる KAIZENの進め方 登壇することになった経緯 ハピタスが掲げている「1度のみ利用可能な案件(新規口座開設やクレジットカード発行等)だけでなく、繰り返し利用可能な案件(楽天市場やYahoo!ショッピングのようなECモール利用等)も収益の柱にしていく」という中長期戦略をもとに発足したプロジェクトを、入社して間もない自分がメンバーの1人として担当したことがきっかけでした。
プロジェクトの最初のフェーズでは、既存のUIが生み出す効果に悪影響を与えないようにするという方針で、ハピタスアプリを対象に、切り戻し可能な仕様で新たにタブを追加し、繰り返し利用可能案件を表示する専用ページを開発しました。
新規タブリリース後の効果検証では、悪影響がないことを確認したため、切り戻し不要と判断しました。
現在は自分がPOとして、リリースした新規タブの機能追加や繰り返し利用可能案件の利用促進に向けた特集ページの作成を行なっています。
練習の模様 発表2日前から資料作成に取り組み、社内メンバーに向けて発表練習を行いました。
メンバーからは、「もっと抑揚をつけて話すと伝わりやすい」「発表の山場がわかりやすいスライドだと良い」等のフィードバックをいただき、その都度スライドと発表方法を更新しながら練習を進めました。
実際に発表してみて 発表して終わりではなく、発表翌日にチームメンバーと相談をして、今回の取り組みの振り返りとナレッジ化を行いました。
(発表して終わりではなく、経験をナレッジとして残すことが大事。)
以下、振り返り時のディスカッションのメモです。
スライド作成のコツ 話す内容をすべて書くのではなく、まず箇条書き。それから膨らませた 手戻りが少なく、FBも反映できる 構成を意識する 自分の写真を登場させた→自分のドヤ感を出す為 この発表の印象をどんなものにしたいか？によってセリフをいれたり、強調するテキストを変えたりしていく 枚数にこだわるより、中身の印象付けが大事(強調のため「効果」だけ書いたスライドを1枚用意した) 見せ方 グラフをいれる→スライドだとみえづらい、、、ちょっと身構えてしまう 読み取って欲しいものだけをテキストに置き換える 今回）結果言いたかったのはコレです！というスライドつくった 聞いている人が理解している範囲と、自分の発表で伝えている内容を一致させていく 今回の例）「ここまでの内容をまとめると」というスライドを要所にいれていった。ブレークポイントを打つ。 スライドが真面目すぎなくてよかった 聞いている人も楽しめる ここで笑って欲しい、クスっとポイントが相手にも伝わっていた ただ情報を伝えるだけでなく、相手も楽しめる発表がよい 「お持ち帰りポイント」という記載があってよかった ワードが柔らかいから良い 聞いてる側がより意識を向けられる。発表の要点が伝えられる。 何を一番伝えたい？というのがわかりやすいようにすると良さそう 発表のコツ 笑いポイントいれる 特に伝えたいことは、ゆっくり話す・タメを作ったりして際立たせる 山場・話の抑揚つける 実際どうだった？掴めた？(自己評価) 100点とは言わないものの、意識して話せた！ 社内と社外発表の違い 社内:ある程度自分のやってきたことを知ってくれているという前提 社外:理解度を合わせていく作業を少し丁寧にやる必要がある 例）自己紹介いれたり、雰囲気の作り方を調整したりする スライドの綺麗さも大事だけど中身が大事！ 終わりに 発表に向けて資料をまとめることで、今までの取り組みを客観的に振り返ることができました。</description></item></channel></rss>